---
name: Build, lint (+ release)
on:
  push: 
    tags:
      - '*'
    branches: ['main']

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  BUN_VERSION: latest

jobs:
  lint:
    # Excute eslint & prettier
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: oven-sh/setup-bun@v2
        with:
          bun-version: ${{ env.BUN_VERSION }}
      - name: Install dependencies
        run: bun install
      - name: Lint
        run: bun run lint
  compile:
    # Compile with TSC
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: oven-sh/setup-bun@v2
        with:
          bun-version: ${{ env.BUN_VERSION }}
      - name: Install dependencies
        run: bun install
      - name: Build
        run: bun run build
  releasepkg:
    if: startsWith(github.ref, 'refs/tags/')
    needs: ['compile', 'lint']
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - name: Gen changelog
        run: bash .github/bin/changelog.sh > ${GITHUB_WORKSPACE}/changelog.txt
      - name: Create release
        uses: softprops/action-gh-release@v2
        with:
          body_path: '${{ github.workspace }}/changelog.txt'
          token: ${{ secrets.GITHUB_TOKEN }}

  releaseimg:
    if: startsWith(github.ref, 'refs/tags/')
    needs: ['compile', 'lint']
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
  
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: docker/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
